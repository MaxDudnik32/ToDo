{"ast":null,"code":"var _jsxFileName = \"E:\\\\Proramming\\\\react-todo-app-main\\\\src\\\\components\\\\TodoItem.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { deleteTodo, updateTodo } from '../redux/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TodoItem({\n  todo\n}) {\n  _s();\n\n  const [editable, setEditable] = useState(false);\n  const [name, setName] = useState(todo.name);\n  const [checked, setChecked] = useState(false);\n  let dispatch = useDispatch();\n  console.log(checked);\n\n  const setCheckbox = () => {\n    setChecked(!checked);\n    console.log(checked);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row mx-2 align-items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        onChange: e => setCheckbox()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"#\", todo.id.length > 1 ? todo.id[2] : todo.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: editable ? /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          value: name,\n          onChange: e => {\n            setName(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: todo.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary m-2\",\n        onClick: () => {\n          dispatch(updateTodo({ ...todo,\n            name: name\n          }));\n\n          if (editable) {\n            setName(todo.name);\n          }\n\n          setEditable(!editable);\n        },\n        children: editable ? \"Update\" : \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-danger m-2\",\n        onClick: () => dispatch(deleteTodo(todo.id)),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TodoItem, \"4XE1+4Ej4yCTD0o+Lz4rjIls6UM=\", false, function () {\n  return [useDispatch];\n});\n\n_c = TodoItem;\nexport default TodoItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoItem\");","map":{"version":3,"sources":["E:/Proramming/react-todo-app-main/src/components/TodoItem.jsx"],"names":["React","useState","useDispatch","deleteTodo","updateTodo","TodoItem","todo","editable","setEditable","name","setName","checked","setChecked","dispatch","console","log","setCheckbox","e","id","length","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,UAAT,EAAqBC,UAArB,QAAuC,kBAAvC;;;AAEA,SAASC,QAAT,CAAkB;AAAEC,EAAAA;AAAF,CAAlB,EAA4B;AAAA;;AACxB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAACK,IAAI,CAACG,IAAN,CAAhC;AACA,QAAM,CAACE,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,KAAD,CAAtC;AACA,MAAIY,QAAQ,GAAGX,WAAW,EAA1B;AAEAY,EAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ;;AAEA,QAAMK,WAAW,GAAG,MAAM;AACtBJ,IAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ;AACH,GAHD;;AAKA,sBACI;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,6BAAf;AAAA,8BACI;AACI,QAAA,IAAI,EAAC,UADT;AAEI,QAAA,QAAQ,EAAGM,CAAD,IAAOD,WAAW;AAFhC;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AAAA,wBAAOV,IAAI,CAACY,EAAL,CAAQC,MAAR,GAAiB,CAAjB,GAAqBb,IAAI,CAACY,EAAL,CAAQ,CAAR,CAArB,GAAkCZ,IAAI,CAACY,EAA9C;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,kBACKX,QAAQ,gBACL;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,SAAS,EAAC,cAA7B;AACI,UAAA,KAAK,EAAEE,IADX;AAEI,UAAA,QAAQ,EAAGQ,CAAD,IAAO;AACbP,YAAAA,OAAO,CAACO,CAAC,CAACG,MAAF,CAASC,KAAV,CAAP;AACH;AAJL;AAAA;AAAA;AAAA;AAAA,gBADK,gBAQL;AAAA,oBAAKf,IAAI,CAACG;AAAV;AAAA;AAAA;AAAA;AAAA;AATR;AAAA;AAAA;AAAA;AAAA,cANJ,eAiBI;AAAQ,QAAA,SAAS,EAAC,qBAAlB;AACI,QAAA,OAAO,EAAE,MAAM;AACXI,UAAAA,QAAQ,CAACT,UAAU,CAAC,EAChB,GAAGE,IADa;AAEhBG,YAAAA,IAAI,EAAEA;AAFU,WAAD,CAAX,CAAR;;AAIA,cAAGF,QAAH,EAAa;AACZG,YAAAA,OAAO,CAACJ,IAAI,CAACG,IAAN,CAAP;AACA;;AACDD,UAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AAGH,SAZL;AAAA,kBAaEA,QAAQ,GAAC,QAAD,GAAU;AAbpB;AAAA;AAAA;AAAA;AAAA,cAjBJ,eA+BI;AAAQ,QAAA,SAAS,EAAC,oBAAlB;AACI,QAAA,OAAO,EAAE,MAAMM,QAAQ,CAACV,UAAU,CAACG,IAAI,CAACY,EAAN,CAAX,CAD3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA/BJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAuCH;;GApDQb,Q;UAIUH,W;;;KAJVG,Q;AAsDT,eAAeA,QAAf","sourcesContent":["import React, { useState } from 'react'\nimport { useDispatch } from 'react-redux';\nimport { deleteTodo, updateTodo } from '../redux/actions';\n\nfunction TodoItem({ todo }) {\n    const [editable, setEditable] = useState(false)\n    const [name, setName] = useState(todo.name)\n    const [checked, setChecked] = useState(false);\n    let dispatch = useDispatch();\n\n    console.log(checked);\n\n    const setCheckbox = () => {\n        setChecked(!checked);\n        console.log(checked);\n    }\n\n    return (\n        <div>\n            <div className=\"row mx-2 align-items-center\">\n                <input \n                    type=\"checkbox\"\n                    onChange={(e) => setCheckbox()} \n                />\n                <div>#{todo.id.length > 1 ? todo.id[2] : todo.id}</div>\n                <div className=\"col\">\n                    {editable ?\n                        <input type=\"text\" className=\"form-control\"\n                            value={name}\n                            onChange={(e) => {\n                                setName(e.target.value);\n                            }}\n                        />\n                        :\n                        <h4>{todo.name}</h4>}\n                </div>\n                <button className=\"btn btn-primary m-2\"\n                    onClick={() => {\n                        dispatch(updateTodo({\n                            ...todo,\n                            name: name\n                        }))\n                        if(editable) {\n                         setName(todo.name);   \n                        }\n                        setEditable(!editable);\n                      \n\n                    }}\n                >{editable?\"Update\":\"Edit\"}</button>\n                <button className=\"btn btn-danger m-2\"\n                    onClick={() => dispatch(deleteTodo(todo.id))}\n                >Delete</button>\n            </div>\n        </div>\n    )\n}\n\nexport default TodoItem\n"]},"metadata":{},"sourceType":"module"}