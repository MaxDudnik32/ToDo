{"ast":null,"code":"import { ADD_TODO, UPDATE_TODO, DELETE_TODO } from './actions';\nimport { todos } from './states';\nexport let reducer = (state = todos, action) => {\n  let newTodos;\n\n  switch (action.type) {\n    case ADD_TODO:\n      newTodos = [...state];\n      newTodos.push(action.payload);\n      return newTodos;\n\n    case DELETE_TODO:\n      newTodos = [...state];\n      newTodos = newTodos.filter(todo => todo.id != action.payload);\n      return newTodos;\n\n    case UPDATE_TODO:\n      newTodos = [...state];\n      let index = -1;\n\n      for (let i = 0; i < newTodos.length; i++) {\n        index++;\n\n        if (newTodos[i].id == action.payload.id) {\n          break;\n        }\n      }\n\n      if (index != -1) {\n        newTodos[index] = action.payload;\n        return newTodos;\n      }\n\n  }\n\n  return state;\n};","map":{"version":3,"sources":["E:/Proramming/react-todo-app-main/src/redux/reducers.js"],"names":["ADD_TODO","UPDATE_TODO","DELETE_TODO","todos","reducer","state","action","newTodos","type","push","payload","filter","todo","id","index","i","length"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,WAAnB,EAAgCC,WAAhC,QAAmD,WAAnD;AACA,SAASC,KAAT,QAAsB,UAAtB;AAGA,OAAO,IAAIC,OAAO,GAAG,CAACC,KAAK,GAAGF,KAAT,EAAgBG,MAAhB,KAA2B;AAC5C,MAAIC,QAAJ;;AACA,UAAQD,MAAM,CAACE,IAAf;AACI,SAAKR,QAAL;AACIO,MAAAA,QAAQ,GAAG,CAAC,GAAGF,KAAJ,CAAX;AACAE,MAAAA,QAAQ,CAACE,IAAT,CAAcH,MAAM,CAACI,OAArB;AACA,aAAOH,QAAP;;AACJ,SAAKL,WAAL;AACIK,MAAAA,QAAQ,GAAG,CAAC,GAAGF,KAAJ,CAAX;AACAE,MAAAA,QAAQ,GAAGA,QAAQ,CAACI,MAAT,CAAgBC,IAAI,IAAIA,IAAI,CAACC,EAAL,IAAWP,MAAM,CAACI,OAA1C,CAAX;AACA,aAAOH,QAAP;;AACJ,SAAKN,WAAL;AACIM,MAAAA,QAAQ,GAAG,CAAC,GAAGF,KAAJ,CAAX;AACA,UAAIS,KAAK,GAAG,CAAC,CAAb;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,QAAQ,CAACS,MAA7B,EAAqCD,CAAC,EAAtC,EAA0C;AACtCD,QAAAA,KAAK;;AACL,YAAIP,QAAQ,CAACQ,CAAD,CAAR,CAAYF,EAAZ,IAAkBP,MAAM,CAACI,OAAP,CAAeG,EAArC,EAAyC;AACrC;AACH;AAEJ;;AACD,UAAIC,KAAK,IAAI,CAAC,CAAd,EAAiB;AACbP,QAAAA,QAAQ,CAACO,KAAD,CAAR,GAAkBR,MAAM,CAACI,OAAzB;AACA,eAAOH,QAAP;AACH;;AAtBT;;AAyBA,SAAOF,KAAP;AACH,CA5BM","sourcesContent":["import { ADD_TODO, UPDATE_TODO, DELETE_TODO } from './actions';\nimport { todos } from './states';\n\n\nexport let reducer = (state = todos, action) => {\n    let newTodos;\n    switch (action.type) {\n        case ADD_TODO:\n            newTodos = [...state];\n            newTodos.push(action.payload);\n            return newTodos;\n        case DELETE_TODO:\n            newTodos = [...state];\n            newTodos = newTodos.filter(todo => todo.id != action.payload);\n            return newTodos;\n        case UPDATE_TODO:\n            newTodos = [...state];\n            let index = -1;\n            for (let i = 0; i < newTodos.length; i++) {\n                index++;\n                if (newTodos[i].id == action.payload.id) {\n                    break;\n                }\n\n            }\n            if (index != -1) {\n                newTodos[index] = action.payload;\n                return newTodos;\n            }\n\n    }\n    return state;\n}"]},"metadata":{},"sourceType":"module"}